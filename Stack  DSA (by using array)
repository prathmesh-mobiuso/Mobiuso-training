public class Stack
{
	static int head;
	static int size;
	int [] Stack;
	
	Stack()
	{
		head=-1;
		size=10;
		Stack=new int[size];
		
	}

	public boolean isEmpty() //isEmpty function to check whether the stack is empty or not
	{
		return head == -1;
	}
	
	public boolean isFull() //isFull function to check whether the stack is full or not
	{
		return head==size-1;
	}
	
	public void push(int data) //push function is to add data in the stack
	{
		if(isFull())
		{
			System.out.println("The stack is full");
			return;
		}
		
		Stack[++head]=data;
		
	}
	
	public int peek()   //push function is to retrive topmost element  of the stack
	{
		return Stack[head];
	}
	
	public int pop()  //push function is to remove topmost element  of the stack
	{
		if(isEmpty())
		{
			System.out.println("Stack is empty ");
			
		}
		return Stack[head--];
	}
	
	public void printstack() //push function is to print the stack
	{
		for(int i=0;i<size;i++)
		{
			
			System.out.println(Stack[i] +" ");
		}
	} 
	public static void main(String[] args)  //main method
	{
		Stack obj=new Stack();
		System.out.println(obj.isEmpty());
		obj.push(1);
		obj.push(2);
		obj.push(3);
		obj.push(4);
		obj.push(5);
		
		System.out.println(obj.peek());
		obj.pop();
		
		System.out.println(obj.peek());
		System.out.println("check whether it is full or not = "+obj.isFull());
		obj.push(6);
		obj.push(7);
		obj.push(8);
		obj.push(9);
		obj.push(10);
		obj.push(11);
		obj.printstack();
		System.out.println("check whether it is full or not = "+obj.isFull());
		obj.push(12);
	}

}
